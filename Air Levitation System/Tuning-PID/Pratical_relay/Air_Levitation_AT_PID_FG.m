%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
% Universidade Federal do Piauí                       %
% Campus Ministro Petronio Portela                    %
% Copyright 2022 -José Borges do Carmo Neto-          %
% @author José Borges do Carmo Neto                   %
% @email jose.borges90@hotmail.com                    %
%  PID controllers for the Phase                      %
%  and Gain Margins of the System                     % 
%                                                     %
%  -- Version: 1.0  - 30/04/2022                      %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 

%% 1 - Tratando o processo:
Tamostra = 0.06
dh = 60;
dl = 47;
n = 200
eps = 10;

d=(dh-dl)/2

ep = eps

%% 2 - Aplicando o rele:

u = [0, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47]
ref = 500*ones(size(u))
y = [26, 31, 31, 26, 26, 35, 35, 42, 35, 31, 38, 81, 104, 168, 186, 196, 212, 233, 273, 300, 317, 332, 361, 387, 403, 434, 469, 509, 530, 556, 588, 610, 633, 651, 669, 690, 711, 729, 741, 754, 759, 775, 788, 791, 793, 786, 792, 797, 789, 793, 794, 783, 777, 776, 786, 788, 775, 779, 771, 776, 769, 769, 763, 761, 761, 752, 751, 745, 742, 737, 732, 734, 729, 718, 722, 714, 691, 690, 686, 679, 676, 670, 672, 665, 659, 654, 652, 643, 639, 630, 624, 616, 610, 606, 598, 596, 589, 586, 582, 577, 564, 556, 545, 540, 535, 527, 524, 522, 516, 509, 501, 496, 494, 489, 486, 478, 476, 466, 462, 454, 448, 442, 436, 430, 421, 418, 412, 408, 403, 398, 392, 391, 387, 384, 382, 385, 388, 391, 402, 410, 423, 438, 451, 467, 486, 506, 525, 550, 577, 598, 620, 639, 727, 743, 755, 766, 769, 779, 777, 779, 784, 781, 782, 782, 784, 779, 782, 780, 768, 768, 759, 748, 749, 735, 730, 722, 717, 706, 690, 691, 682, 673, 667, 658, 657, 650, 640, 624, 618, 603, 596, 592, 579, 579, 568, 573, 563, 561, 556, 553, 549, 526, 520, 517, 515, 512, 511, 506, 505, 498, 496, 496, 491, 488, 486, 480, 475, 469, 474, 469, 467, 466, 463, 457, 451, 447, 446, 448, 441, 440, 434, 433, 429, 429, 423, 418, 412, 411, 403, 397, 389, 387, 386, 387, 390, 393, 400, 410, 426, 434, 451, 467, 491, 516, 533, 560, 584, 606, 629, 645, 665, 680, 699, 714, 738, 745, 751, 753, 765, 764, 773, 777, 780, 774, 777, 771, 771, 758, 754, 749, 737, 736, 729, 724, 720, 714, 711, 711, 706, 701, 692, 684, 679, 674, 670, 669, 661, 659, 652, 651, 647, 636, 627, 617, 610, 601, 593, 580, 582, 574, 571, 569, 560, 552, 544, 536, 529, 525, 520, 518, 514, 501, 495, 489, 482, 473, 465, 457, 454, 452, 448, 441, 438, 435, 422, 421, 413, 410, 405, 400, 393, 388, 391, 387, 385, 390, 397, 404, 415, 420, 436, 441, 460, 482, 498, 522, 545, 569, 597, 617, 639, 668, 696, 716, 744, 773, 781, 794, 798, 807, 811, 806, 809, 810, 806, 793, 776, 769, 758, 734, 726, 716, 712, 708, 706, 699, 691, 688, 685, 677, 676, 670, 666, 659, 658, 650, 648, 640, 627, 621, 616, 610, 606, 600, 596, 590, 582, 583, 577, 578, 564, 563, 556, 544, 536, 517, 518, 516, 506, 502, 500, 498, 493, 489, 486, 483, 479, 475, 471, 465, 457, 455, 453, 445, 436, 432, 432, 427, 416, 413, 405, 397, 392, 385, 381, 380, 376, 378, 382, 385, 390, 398, 405, 418, 430, 440, 455, 467, 488, 507, 530, 552, 580, 601, 620, 642, 677, 697, 712, 721, 735, 747, 748, 753, 751, 761, 765, 762, 764, 760, 761, 761, 753, 751, 750, 749, 749, 744, 740, 733, 724, 720, 720, 715, 706, 697, 696, 690, 690, 684]

Qde_amostras = size(u,2)
nptos = Qde_amostras
t = 1:1:Qde_amostras
Tempo = Tamostra*t
%%
plot(y)
hold on
plot(u)
%% 3 Identificar os parametros a partir do experimento com relé:

    %[gw,w,arm,Kp]=Identificar(n, d, eps,Tamostra,y,u);
    
  maxi=max(y(nptos/2:end));
  mini=min(y(nptos/2:end));
  d=(dh-dl)/2
  a=(maxi-mini)/2
  img=((pi*ep)/(4*d))
  real=((-pi)/(4*d))*sqrt((a^2)-(ep^2))
  g=real-j*img

kont = 0;
for t = 4:Qde_amostras,
   if u(t) ~= u(t-1)
      kont = kont + 1;
      ch(kont) = t;
   end
end
Tu1 = (ch(3) - ch(2))*Tamostra
Tu2 = (ch(4) - ch(3))*Tamostra
Tu = Tu1 + Tu2
w = (2*pi)/(Tu)

% --- Calcula valor de pico positivo
amp_max = eps;
for t =1:Qde_amostras,
   if y(t) >= amp_max  amp_max = y(t); end;
end;
%%
num = 0;
den = 0;
for j=(n/2):(n/2)+ceil(Tu),
    num = num + y(j);
    den = den + u(j);
end
Kp = num/den
  %******************Calculo ganho e fase do processo*******
gw=-(pi*sqrt(a^2-eps^2))/(4*d)
%%
    Ku = -1/gw;
    %Tu = (2*pi)/w; 

    L = 1;
   
    c = 1/Kp;
    b = sin(w*L)/(w*Ku);
    a = (c + cos(w*L))/(w^2);
    
%% 3.1 teste modelo:
a1 = -0.955255265000912
a2 = -0.029363939258160
b1 = 0.026243849901936
b2 = 0.274777441417530
%% Definições do controlador AT-PID-FG: 
%     Am_min = 2; 
%     Am_max = 5;
%     Theta_m_min = 45;
%     Theta_m_max = 72;
%% Sintonizanodo o PID:
    Am = 3;
    Theta_m = (180/2)*(1-(1/Am));
    
    K = (pi/(2*Am*L))*[b;c;a];
    Kc = K(1);
    Ki = K(2);
    Kd = K(3);
    K
%% Aplicando o controlador - OLD version
for i=1:nptos,
    if (i<=nptos/2)  ref(i)=100; end;
    if (i>nptos/2)   ref(i) = 500; end;
end ;

y(4)=0 ; y(3)=0 ; y(2)=0 ; y(1)=0 ; 
u(1)=0 ; u(2)=0 ; u(3)=0; u(4)=0;

erro(1)=1 ; erro(2)=1 ; erro(3)=1; erro(4)=1;

rlevel = 0.0;
ruido = rlevel*rand(1,nptos);

for i=5:nptos,


    
%[c0,c1,c2,r0,r1,r2] = discretiza_zoh(P1(i),P2(i),k,Tc); %chama a função que discretiza o processo utilizano um ZOH;

    % if (i==550),r1 = - 1.84;r2 = 0.9109;  end % Ruptura no modelo
     y(i) = -a1*y(i-1)-a2*y(i-2)+b1*u(i-1)+b2*u(i-2);
     %y(i)= -r1*y(i-1)-r2*y(i-2)+c0*u(i-2)+c1*u(i-3)+c2*u(i-4); % equação da diferença do processo
     
     erro(i)=ref(i)-y(i); %Erro
      
             %Controlador:

%             alpha = (Kc)*(1+((Td)/Tamostra)+(Tamostra/(2*(Ti))));
%             beta = -(Kc)*(1+2*((Td)/Tamostra)-(Tamostra/(2*(Ti))));
%             gama = (Kc)*(Td)/Tamostra;
            
            % new version
            alpha = Kc+ Kd/Tamostra + (Ki*Tamostra)/2;
            beta = -(Kc) - 2*((Kd)/Tamostra)+(Ki*Tamostra)/2;
            gama = (Kd)/Tamostra;


            u(i)= u(i-1) + alpha*erro(i) + beta*erro(i-1) + gama*erro(i-2);
      
       tempo(i)=i*Tamostra;
      fprintf('amostra:  %d \t entrada:  %6.3f \t saida:  %4.0f\n',i,u(i),y(i));
      
 end ;
 
 
     ISE_t2 = objfunc(erro,tempo,'ISE')
     ITSE_t2 = objfunc(erro,tempo,'ITSE')
     ITAE_t2 = objfunc(erro,tempo,'ITAE')
     IAE_t2 = objfunc(erro,tempo,'IAE')
     
%plotar seinal de saida e  de controle:    
% figure;
% grid;
plot(tempo,y,'r-');
hold on;
plot(tempo,u);
plot(tempo,ref);
title(['AT-PID-FG:',num2str(rlevel), ' ISE:', num2str(ISE_t2), ', ITSE:' ,num2str(ITSE_t2),', IAE:' ,num2str(IAE_t2), ', ITAE:' ,num2str(ITAE_t2)])
%%
% %plotar P1 e P2
% figure;
% grid;
% plot(tempo,P1,'g-');
% hold on;
% plot(tempo,P2);

